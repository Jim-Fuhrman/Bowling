// variables.scss
@use "variables" as vars;
@use "sass:map";

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&family=Ubuntu&display=swap');

@mixin bowlingFramesMixin() {
  margin-right: 0rem;
  border: 0.2rem solid vars.$borderColor;  /* commenting out this line removes borrders */
  background-color: vars.$frameBkgdColor;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 2rem;
  &:hover {
    background-color: vars.$frameHoverColor;
  }
}

/* I'm going to try to create a map of border styles */
$bowlerThemesMap: (
   "-bowler1": (
      background-color: vars.$frameBkgdColor, 
      color: vars.$borderColor, 
      border: 0.2rem solid brown
    ),
   "-bowler2": (
      background-color: beige,
      color: indigo,
      border: 0.2rem solid indigo
      ),
    "-bowler3": (
      background-color: antiquewhite,
      color: black,
      border: 0.2rem solid black
    ),
    "-bowler4": (
      background-color: moccasin,
      color: maroon,
      border: 0.2rem solid maroon
    )
);

@mixin frameColors($name, $passedBkgdColor: vars.$frameBkgdColor, $passedBorderColor: vars.$borderColor) {
  .bowler#{$name} {
  margin-right: 0rem;
  border: 0.2rem solid $passedBorderColor;
  background-color: $passedBkgdColor;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 2rem;
  &:hover {
    background-color: vars.$frameHoverColor;
  }
  }
}

.frames-bowler1 {
  @include frameColors("");
}

@each $key, $values in $bowlerThemesMap {
  @include frameColors($key, values...)
}

* {
  box-sizing: border-box;
}

body {
  text-align: center;
  background-color: vars.$bkgdColor;
  font-family: roboto;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  display: flex;
  flex-direction: column;
}

.container {
  width: 50rem;
  margin: 1rem auto;
  
}

.bowlers:first-of-type {
  margin-top: 2rem;
}

.bowlerName {
  text-align: left;
  font-size: 1.5rem;
}

.bowlers {
  width: 100%;
  margin: 2rem auto;
}

.bowler {
  width: 100%;
  margin: 2rem auto;
}

.bowlingFrame {
  @include bowlingFramesMixin;
  /* @include frameColors(""); */

  &--small {
    @extend .bowlingFrame;
    width: 2rem;
  }
  
  &--large {
    @extend .bowlingFrame;
    width: 3.9rem;
    border-left: 0.2rem solid vars.$borderColor;
    border-top: 0;
    margin-left: 1rem;  
  }
}

.bowlingFramesRow {
  display: flex;
  
  &--small {
    @extend .bowlingFramesRow;
    margin-top: .5rem;
  }
  
  &--large {
    @extend .bowlingFramesRow;
    margin-top: 0;
  }
}

.bowlingFrame--small:nth-of-type(odd) {
  border-left: 0.2rem solid vars.$borderColor;
  margin-left: 1rem;
}

.bowlingFrame--small:nth-of-type(even) {
  border-left: 0;
}

.bowlingFrame:first-of-type,
.bowlingFrame--large:first-of-type
{
  margin-left: 0;
}

.bowlingFrame--small:last-of-type {
  border-left: 0;
  margin-left: 0;
}

.bowlingFrame--large:last-of-type {
  width: 5.9rem;
}